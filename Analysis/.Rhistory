facetcol <- cut(zfacet, nbcol)
persp(x, y, z, col=color[facetcol], phi=30, theta=-30)
par(op)
facetcol
class(facetcol)
nbcol
color
?cut
dim(color)
head(facetcol)
head(z)
dim(z)
z[1:10,1:10]
z[1:10,1:7]
zfacet[1:10,1:7]
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
zfacet[1:10,1:7]
z
zfacet[1:10,1:7]
z[1:10,1:7]
z[-1, -1]
tmp <- z[-1, -1]
dim(tmp)
tmp <- z[-1, -ncz]
dim(tmp)
packmates<-c(0,seq(1:15))
infected<-c(0,seq(1:10))
storage<-mat.or.vec(16,11)
par(mfrow=c(1,2))
pp1b <- data.frame(Mangy=1,ElkWolfRatio=(mean(Data2005$ElkWolfRatio, na.rm=T)),  AvgT3=mean(Data2005$AvgT3, na.rm=T),   MoN = 49)# toggle Mangy=0/1 to see different predictions based on indivdiual mange status
for(i in seq(1, length(packmates))){
pp1b$PackSize<-packmates[i]
for(j in seq(1, length(infected))){
pp1b$NumInfected23<-infected[j]
pr.modp1b<-predict(c3h, newdata = pp1b, se = T, type = 'response')
storage[i,j]<-pr.modp1b$fit
}}
for(i in seq(1, length(packmates))){
tmp<-which(infected>packmates[i])
storage[i, tmp]<-NA
}
pp1b <- data.frame(Mangy=1,ElkWolfRatio=1,  AvgT3=10,   MoN = 49)# toggle Mangy=0/1 to see different predictions based on indivdiual mange status
for(i in seq(1, length(packmates))){
pp1b$PackSize<-packmates[i]
for(j in seq(1, length(infected))){
pp1b$NumInfected23<-infected[j]
pr.modp1b<-predict(c3h, newdata = pp1b, se = T, type = 'response')
storage[i,j]<-pr.modp1b$fit
}}
?persp
x <- seq(-10, 10, length= 30)
y <- x
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
ltheta = 120, shade = 0.75, ticktype = "detailed",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
round(res, 3)
x <- seq(-10, 10, length= 30)
y <- x
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
ltheta = 120, shade = 0.75, ticktype = "detailed",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
round(res, 3)
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
xE <- c(-10,10); xy <- expand.grid(xE, xE)
points(trans3d(xy[,1], xy[,2], 6, pmat = res), col = 2, pch = 16)
lines (trans3d(x, y = 10, z = 6 + sin(x), pmat = res), col = 3)
phi <- seq(0, 2*pi, len = 201)
r1 <- 7.725 # radius of 2nd maximum
xr <- r1 * cos(phi)
yr <- r1 * sin(phi)
lines(trans3d(xr,yr, f(xr,yr), res), col = "pink", lwd = 2)
z <- 2 * volcano        # Exaggerate the relief
x <- 10 * (1:nrow(z))   # 10 meter spacing (S to N)
y <- 10 * (1:ncol(z))   # 10 meter spacing (E to W)
## Don't draw the grid lines :  border = NA
par(bg = "slategray")
persp(x, y, z, theta = 135, phi = 30, col = "green3", scale = FALSE,
ltheta = -120, shade = 0.75, border = NA, box = FALSE)
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue", ltheta = -120)
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue", scale = F)
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue", border  = NA)
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "green3", shade = .75, border  = NA)
facetcol
dim(facetcol)
dim(color)
class(facetcol)
length(facetcol)
30*35
nbcol <- 100
color <- jet.colors(nbcol)
# Compute the z-value at the facet centres
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
facetcol <- cut(zfacet, nbcol)
color.new <- color[facetcol]
color.new
length(colornew)
length(color.new)
par(bg = "white")
x <- seq(-1.95, 1.95, length = 30)
y <- seq(-1.95, 1.95, length = 35)
z <- outer(x, y, function(a,b) a*b^2)
nrz <- nrow(z)
ncz <- ncol(z)
# Create a function interpolating colors in the range of specified colors
jet.colors <- colorRampPalette( c("blue", "green") )
# Generate the desired number of colors from this palette
nbcol <- 100
color <- jet.colors(nbcol)
# Compute the z-value at the facet centres
#zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
zfacet <- z
facetcol <- cut(zfacet, nbcol)
color.new <- color[facetcol]
length(color.new)
rm.cells <- which(z > -4)
rm.cells
par(bg = "white")
x <- seq(-1.95, 1.95, length = 30)
y <- seq(-1.95, 1.95, length = 35)
z <- outer(x, y, function(a,b) a*b^2)
nrz <- nrow(z)
ncz <- ncol(z)
# Create a function interpolating colors in the range of specified colors
jet.colors <- colorRampPalette( c("blue", "green") )
# Generate the desired number of colors from this palette
nbcol <- 100
color <- jet.colors(nbcol)
# Compute the z-value at the facet centres
#zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
zfacet <- z
facetcol <- cut(zfacet, nbcol)
color.new <- color[facetcol]
rm.cells <- which(z > -4)
color.new[rm.cells] <- "grey77"
persp(x, y, z, col=color[facetcol], phi=30, theta=-30)
par(op)
par(bg = "white")
x <- seq(-1.95, 1.95, length = 30)
y <- seq(-1.95, 1.95, length = 35)
z <- outer(x, y, function(a,b) a*b^2)
nrz <- nrow(z)
ncz <- ncol(z)
# Create a function interpolating colors in the range of specified colors
jet.colors <- colorRampPalette( c("blue", "green") )
# Generate the desired number of colors from this palette
nbcol <- 100
color <- jet.colors(nbcol)
# Compute the z-value at the facet centres
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
facetcol <- cut(zfacet, nbcol)
color.new <- color[facetcol]
rm.cells <- which(z > -4)
color.new[rm.cells] <- "grey77"
persp(x, y, z, col=color.new, phi=30, theta=-30)
# Compute the z-value at the facet centres
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
facetcol <- cut(zfacet, nbcol)
color.new <- color[facetcol]
rm.cells <- which(z > -2)
color.new[rm.cells] <- "grey77"
persp(x, y, z, col=color.new, phi=30, theta=-30)
par(op)
# Compute the z-value at the facet centres
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
facetcol <- cut(zfacet, nbcol)
color.new <- color[facetcol]
rm.cells <- which(z > -1)
color.new[rm.cells] <- "grey77"
persp(x, y, z, col=color.new, phi=30, theta=-30)
par(op)
# Compute the z-value at the facet centres
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
facetcol <- cut(zfacet, nbcol)
color.new <- color[facetcol]
rm.cells <- which(z > -1)
color.new[rm.cells] <- "grey77"
persp(x, y, z, col=color.new, phi=30, theta=-30, border = NA)
?which
length(rm.cells)
length(color.new)
length(facetcol)
par(bg = "white")
x <- seq(-1.95, 1.95, length = 30)
y <- seq(-1.95, 1.95, length = 35)
z <- outer(x, y, function(a,b) a*b^2)
z[z>-2] <- NA
nrz <- nrow(z)
ncz <- ncol(z)
# Create a function interpolating colors in the range of specified colors
jet.colors <- colorRampPalette( c("blue", "green") )
# Generate the desired number of colors from this palette
nbcol <- 100
color <- jet.colors(nbcol)
# Compute the z-value at the facet centres
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
facetcol <- cut(zfacet, nbcol)
#color.new <- color[facetcol]
#rm.cells <- which(z > -1)
#color.new[rm.cells] <- "grey77"
persp(x, y, z, col=color[facetcol], phi=30, theta=-30, border = NA)
summary(z)
par(bg = "white")
x <- seq(-1.95, 1.95, length = 50)
y <- seq(-1.95, 1.95, length = 50)
z <- outer(x, y, function(a,b) a*b^2)
z[z>-1] <- NA
nrz <- nrow(z)
ncz <- ncol(z)
# Create a function interpolating colors in the range of specified colors
jet.colors <- colorRampPalette( c("blue", "green") )
# Generate the desired number of colors from this palette
nbcol <- 100
color <- jet.colors(nbcol)
# Compute the z-value at the facet centres
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
facetcol <- cut(zfacet, nbcol)
#color.new <- color[facetcol]
#rm.cells <- which(z > -1)
#color.new[rm.cells] <- "grey77"
persp(x, y, z, col=color[facetcol], phi=30, theta=-30, border = NA)
par(bg = "white")
x <- seq(-1.95, 1.95, length = 50)
y <- seq(-1.95, 1.95, length = 50)
z <- outer(x, y, function(a,b) a*b^2)
z[ z >-0] <- NA
nrz <- nrow(z)
ncz <- ncol(z)
# Create a function interpolating colors in the range of specified colors
jet.colors <- colorRampPalette( c("blue", "green") )
# Generate the desired number of colors from this palette
nbcol <- 100
color <- jet.colors(nbcol)
# Compute the z-value at the facet centres
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
facetcol <- cut(zfacet, nbcol)
#color.new <- color[facetcol]
#rm.cells <- which(z > -1)
#color.new[rm.cells] <- "grey77"
persp(x, y, z, col=color[facetcol], phi=30, theta=-30, border = NA)
par(bg = "white")
x <- seq(-1.95, 1.95, length = 50)
y <- seq(-1.95, 1.95, length = 50)
z <- outer(x, y, function(a,b) a*b^2)
z.na <- outer(x, y, function(a,b) a-b)
na.cells <- which(z.na >0)
z[na.celss] <- NA
nrz <- nrow(z)
ncz <- ncol(z)
# Create a function interpolating colors in the range of specified colors
jet.colors <- colorRampPalette( c("blue", "green") )
# Generate the desired number of colors from this palette
nbcol <- 100
color <- jet.colors(nbcol)
# Compute the z-value at the facet centres
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
facetcol <- cut(zfacet, nbcol)
#color.new <- color[facetcol]
#rm.cells <- which(z > -1)
#color.new[rm.cells] <- "grey77"
persp(x, y, z, col=color[facetcol], phi=30, theta=-30, border = NA)
z[na.cells] <- NA
nrz <- nrow(z)
ncz <- ncol(z)
# Create a function interpolating colors in the range of specified colors
jet.colors <- colorRampPalette( c("blue", "green") )
# Generate the desired number of colors from this palette
nbcol <- 100
color <- jet.colors(nbcol)
# Compute the z-value at the facet centres
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
facetcol <- cut(zfacet, nbcol)
#color.new <- color[facetcol]
#rm.cells <- which(z > -1)
#color.new[rm.cells] <- "grey77"
persp(x, y, z, col=color[facetcol], phi=30, theta=-30, border = NA)
par(op)
install.packages("shinyapps")
library("shinyapps")
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shinyapps::setAccountInfo(
name="paulchafeecr",
token="3603166216EEED0FA045E5B245A78584",
secret="<SECRET>")
shinyapps::setAccountInfo(name='paulchafeecr', token='3603166216EEED0FA045E5B245A78584', secret='ZkDpVxgqLX8uKOVe3K7PFlg+Somu3RZVK91bclG7')
shinyapps::setAccountInfo(name='paulchafeecr', token='3603166216EEED0FA045E5B245A78584', secret='ZkDpVxgqLX8uKOVe3K7PFlg+Somu3RZVK91bclG7')
shinyapps::setAccountInfo(name='paulchafeecr', token='3603166216EEED0FA045E5B245A78584', secret='ZkDpVxgqLX8uKOVe3K7PFlg+Somu3RZVK91bclG7')
?deployApp
deployApp("~/BitBucket/MangeSIS/shinyapp_model4")
devtools::install_github('rstudio/rscrypt')
require('knitr')
setwd("~/BitBucket/VIT2014/Analysis")
knit("WriteUp.Rmd")
knit("Figures.Rmd")
knit("SupInfo.Rmd")
system('pandoc --reference-docx=mytemplate.docx WriteUp.md -s -o WriteUp.docx --bibliography VITpaper.bib --csl JWM.csl')
system('pandoc --reference-docx=mytemplate.docx Table1.md  -s -o Table1.docx')
system('pandoc --reference-docx=mytemplate.docx Figures.md -s -o Figures.docx')
system('pandoc --reference-docx=mytemplate.docx SupInfo.md -s -o SupInfo.docx')
system('pandoc --template pcctemplate.latex WriteUp.md -s -o WriteUp.pdf --bibliography VITpaper.bib --csl JWM.csl')
system('pandoc --template pcctemplate.latex Table1.md -s -o Table1.pdf')
system('pandoc --template pcctemplate.latex Figures.md -s -o Figures.pdf')
system('pandoc --template pcctemplate.latex SupInfo.md -s -o SupInfo.pdf')
4/5
3.34/0.8
?mgp
??mgp
?par
setwd("~/BitBucket/VIT2014/Analysis")
rm(list = ls())
library(lubridate)
load('VIT_Data2014_Full_POS.RData')
source('VITplot_interval2.R')
par(mfrow = c(2,1), mar = c(2,3,0.5,0.5), cex = 1, mgp = c(1.5,.25,0))
#Figure 2A
VITplot_interval2(DataPOS, 2)
text(as.Date("2013/01/01"), 130, "A)", pos = 4, cex = 1)
#Figure 2B: Fetus recovery data
Fetus <- read.table('FetusRecoveryField.txt', header = T) #read in data
Fetus$Date2 <- mdy(Fetus$Date) # reformat dates
Fetus$DOY <- yday(Fetus$Date2) # reformat dates
Fetus <- Fetus[order(Fetus$DOY),] # sort by doy
Fetus <- subset(Fetus, is.na(Fetus$Date2) == F) # remove the NAs
# PLOT
hist(Fetus$DOY, breaks = 10, ylim = c(0,14), xlim = c(1, max(DataPOS$EndDOY)), main = '', xlab = "", xaxt = "n", col = 'grey',
ylab = "Number of fetuses", tck = 0.02)
axis(1, at = c( 1, 32, 60, 91, 121, 152, 182),
labels = c("Jan 1", "Feb 1", "Mar 1", "Apr 1", "May 1", "Jun 1", "Jul 1"), tck = 0.02)
text(1, 13, "B)", pos = 4, cex = 1)
par(mfrow = c(2,1), mar = c(2,3,0.25,0.25), cex = 1, mgp = c(1.5,.25,0))
#Figure 2A
VITplot_interval2(DataPOS, 2)
text(as.Date("2013/01/01"), 130, "A)", pos = 4, cex = 1)
#Figure 2B: Fetus recovery data
Fetus <- read.table('FetusRecoveryField.txt', header = T) #read in data
Fetus$Date2 <- mdy(Fetus$Date) # reformat dates
Fetus$DOY <- yday(Fetus$Date2) # reformat dates
Fetus <- Fetus[order(Fetus$DOY),] # sort by doy
Fetus <- subset(Fetus, is.na(Fetus$Date2) == F) # remove the NAs
# PLOT
hist(Fetus$DOY, breaks = 10, ylim = c(0,14), xlim = c(1, max(DataPOS$EndDOY)), main = '', xlab = "", xaxt = "n", col = 'grey',
ylab = "Number of fetuses", tck = 0.02)
axis(1, at = c( 1, 32, 60, 91, 121, 152, 182),
labels = c("Jan 1", "Feb 1", "Mar 1", "Apr 1", "May 1", "Jun 1", "Jul 1"), tck = 0.02)
text(1, 13, "B)", pos = 4, cex = 1)
source('plot_VITresults_fxns.R')
load('Result_mod40k_bcen1.RData')
load('VIT_Data2014_BirthsCensored.RData')
#Part A
start.offset <- min(Data$CapDOY)
par(mfrow = c(2,1), mar = c(2,3,0.5,0.5), mgp = c(1.5,.25,0))
plot_baseline(mod40k_bcen, MainLab = " ", start.offset, 2, Ylim = c(0,0.008),
Xlim = as.Date(c('2013/01/15', '2013/07/01')),
legendflag=FALSE, FmoTix = T,
Ylab = expression(paste("Abortion hazard  ", italic(f)(italic(t)))))
text(as.Date("2013/01/11"), 0.008, "A) Censoring births", pos = 4, cex = 1)
load('Result_mod40k1.RData')
#Part B
plot_hazAb(mod40k, MainLab = " ", start.offset, 2,  Ylim = c(0,0.008),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = expression(paste("Abortion hazard  ", italic(f)[c==1](italic(t)))),
FmoTixs = T)
text(as.Date("2013/01/11"), 0.008, "B) Full model", pos = 4, cex = 1)
par(mfrow = c(1,1), mar = c(2,3,0.25,0.25), cex = 1, mgp = c(1.5,.25,0))
plot_Pabort(mod40k, "", start.offset, 2,  Xlim = as.Date(c('2013/01/15',
'2013/07/01')),
legendflag=FALSE)
6/7.08
7*.085
7/.085
7/.85
rm(list = ls())
source('plot_VITresults_fxns.R')
load('Result_mod40k1.RData')
load('VIT_Data2013_Full_POS.RData')
start.offset <- min(Data$CapDOY)
par(mfrow = c(2,2), mar = c(2,3,1,1), cex = 1, mgp = c(2,.5,0))
#Top row
plot_hazAb(mod40k, "", start.offset, 2, Ylim = c(0, 0.008),
Ylab = expression(paste("Abortion hazard  ",
italic(h)[c==1](italic(t)))),
Xlim = as.Date(c('2013/01/15', '2013/07/01')),
legendflag=FALSE, FmoTixs = T)
text(as.Date("2013/01/11"), 0.008, "A)", pos = 4, cex = 1)
plot_abort_ft(mod40k, "", start.offset, 2, Ylim = c(0, 0.008),
Ylab = expression(paste("Abortion density  ",
italic(f)[c==1](italic(t)))),
Xlim = as.Date(c('2013/01/15', '2013/07/01')),
legendflag=FALSE, FmoTixs = T)
text(as.Date("2013/01/11"), 0.008, "B)", pos = 4, cex = 1)
#Bottom row
plot_hazLB(mod40k, "", start.offset, 2, Ylim = c(0, 0.15),
Xlim = as.Date(c('2013/01/15', '2013/07/01')),
Ylab = expression(paste("Birth hazard  ",
italic(h)[c==2](italic(t)))),
legendflag=FALSE, FmoTixs = T)
text(as.Date("2013/01/11"), 0.15, "C)", pos = 4, cex = 1)
plot_birth_ft(mod40k, "", start.offset, 2, Ylim = c(0, 0.04),
Xlim = as.Date(c('2013/01/15', '2013/07/01')),
Ylab = expression(paste("Birth density  ",
italic(f)[c==2](italic(t)))),
legendflag=FALSE, FmoTixs = T)
text(as.Date("2013/01/11"), 0.04, "D)", pos = 4, cex = 1)
par(mfrow = c(2,2), mar = c(2,3.2,1,1), cex = 1, mgp = c(2,.5,0))
#Top row
plot_hazAb(mod40k, "", start.offset, 2, Ylim = c(0, 0.008),
Ylab = expression(paste("Abortion hazard  ",
italic(h)[c==1](italic(t)))),
Xlim = as.Date(c('2013/01/15', '2013/07/01')),
legendflag=FALSE, FmoTixs = T)
text(as.Date("2013/01/11"), 0.008, "A)", pos = 4, cex = 1)
plot_abort_ft(mod40k, "", start.offset, 2, Ylim = c(0, 0.008),
Ylab = expression(paste("Abortion density  ",
italic(f)[c==1](italic(t)))),
Xlim = as.Date(c('2013/01/15', '2013/07/01')),
legendflag=FALSE, FmoTixs = T)
text(as.Date("2013/01/11"), 0.008, "B)", pos = 4, cex = 1)
#Bottom row
plot_hazLB(mod40k, "", start.offset, 2, Ylim = c(0, 0.15),
Xlim = as.Date(c('2013/01/15', '2013/07/01')),
Ylab = expression(paste("Birth hazard  ",
italic(h)[c==2](italic(t)))),
legendflag=FALSE, FmoTixs = T)
text(as.Date("2013/01/11"), 0.15, "C)", pos = 4, cex = 1)
plot_birth_ft(mod40k, "", start.offset, 2, Ylim = c(0, 0.04),
Xlim = as.Date(c('2013/01/15', '2013/07/01')),
Ylab = expression(paste("Birth density  ",
italic(f)[c==2](italic(t)))),
legendflag=FALSE, FmoTixs = T)
text(as.Date("2013/01/11"), 0.04, "D)", pos = 4, cex = 1)
load('Result_mod10k1.RData')
load('Result_mod40k1.RData')
load('Result_icar1.RData')
load('VIT_Data2014_Full_POS.RData')
source('plot_VITresults_fxns.R')
start.offset <- min(Data$CapDOY)
par(mfrow = c(2,3), mar = c(2,3,0.4,.2), cex = 1, mgp = c(2,.5,0), family = "sans",
font = 1)
plot_abort_ft(mod10k, "", start.offset, 2, Ylim = c(0, 0.008),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = expression(paste("Abortion density  ",
italic(f)[c==1](italic(t)))),
FmoTixs = T)
text(as.Date("2013/01/11"), 0.008, "A) 10 knots", pos = 4, cex = 1)
plot_abort_ft(mod40k, "", start.offset, 2, Ylim = c(0, 0.008),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = "", FmoTixs = T)
text(as.Date("2013/01/11"), 0.008, "B) 40 knots", pos = 4, cex = 1)
plot_abort_ft(icarmod, "", start.offset, 2,  Ylim = c(0, 0.008),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = "", FmoTixs = T)
text(as.Date("2013/01/11"), 0.008, "C) CAR model", pos = 4, cex = 1)
plot_birth_ft(mod10k, "", start.offset, 2,   Ylim = c(0, 0.05),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = expression(paste("Birth density  ",
italic(f)[c==2](italic(t)))),
FmoTixs = T)
text(as.Date("2013/01/11"), 0.05, "D) 10 knots", pos = 4, cex = 1)
plot_birth_ft(mod40k, "", start.offset, 2,   Ylim = c(0, 0.05),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = "", FmoTixs = T)
text(as.Date("2013/01/11"), 0.05, "E) 40 knots", pos = 4, cex = 1)
plot_birth_ft(icarmod, "", start.offset, 2,  Ylim = c(0, 0.05),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = "", FmoTixs = T)
text(as.Date("2013/01/11"), 0.05, "F) CAR model", pos = 4, cex = 1)
par(mfrow = c(2,3), mar = c(2,3,0.5,.25), cex = 1, mgp = c(2,.5,0), family = "sans",
font = 1)
plot_abort_ft(mod10k, "", start.offset, 2, Ylim = c(0, 0.008),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = expression(paste("Abortion density  ",
italic(f)[c==1](italic(t)))),
FmoTixs = T)
text(as.Date("2013/01/11"), 0.008, "A) 10 knots", pos = 4, cex = 1)
plot_abort_ft(mod40k, "", start.offset, 2, Ylim = c(0, 0.008),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = "", FmoTixs = T)
text(as.Date("2013/01/11"), 0.008, "B) 40 knots", pos = 4, cex = 1)
plot_abort_ft(icarmod, "", start.offset, 2,  Ylim = c(0, 0.008),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = "", FmoTixs = T)
text(as.Date("2013/01/11"), 0.008, "C) CAR model", pos = 4, cex = 1)
plot_birth_ft(mod10k, "", start.offset, 2,   Ylim = c(0, 0.05),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = expression(paste("Birth density  ",
italic(f)[c==2](italic(t)))),
FmoTixs = T)
text(as.Date("2013/01/11"), 0.05, "D) 10 knots", pos = 4, cex = 1)
plot_birth_ft(mod40k, "", start.offset, 2,   Ylim = c(0, 0.05),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = "", FmoTixs = T)
text(as.Date("2013/01/11"), 0.05, "E) 40 knots", pos = 4, cex = 1)
plot_birth_ft(icarmod, "", start.offset, 2,  Ylim = c(0, 0.05),
Xlim = as.Date(c('2013/01/15', '2013/07/01')), legendflag=FALSE,
Ylab = "", FmoTixs = T)
text(as.Date("2013/01/11"), 0.05, "F) CAR model", pos = 4, cex = 1)
knit("Table1.Rmd")
knit("Figures.Rmd")
knit("SupInfo.Rmd")
